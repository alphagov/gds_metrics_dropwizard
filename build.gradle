plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

repositories {
    mavenCentral()
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'io.github.gradle-nexus.publish-plugin'

description = ' Library for prometheus instrumentation in Dropwizard based apps.'

sourceCompatibility = 1.11
targetCompatibility = 1.11

test {
    dependsOn << compileTestJava
    testLogging {
        events "skipped", "failed", "standardError"
        showCauses true
        showExceptions true
        showStackTraces true
        exceptionFormat "full"

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }

    archiveBaseName = 'gds-metrics-dropwizard'
}

ext {
    dropwizard_version = '1.3.29'
    mockito_version = '3.11.2'
}

dependencies {
    api 'io.prometheus:simpleclient_dropwizard:0.12.0'
    api 'io.prometheus:simpleclient_servlet:0.11.0'
    api 'io.prometheus:simpleclient_hotspot:0.11.0'

    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'org.glassfish.jersey.core:jersey-client:2.25.1'
    implementation'javax.servlet:javax.servlet-api:4.0.1'

    compileOnly "io.dropwizard:dropwizard-core:$dropwizard_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "io.dropwizard:dropwizard-testing:$dropwizard_version"
}

java {
    withJavadocJar()
    withSourcesJar()
}

nexusPublishing {
    useStaging = true
    repositories {
        sonatype {
            // because we registered in Sonatype after 24 Feb 2021, we provide these URIs
            // see: https://github.com/gradle-nexus/publish-plugin/blob/master/README.md
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("SONATYPE_USERNAME")
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getenv("MAVEN_CENTRAL_SIGNING_KEY"),
            System.getenv("MAVEN_CENTRAL_SIGNING_KEY_PASSWORD")
    )
    sign publishing.publications
}

def buildVersion = "0.7.0-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"
group = 'uk.gov.ida'
version = "$buildVersion"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = group
            pom {
                name = 'gds_metrics_dropwizard'
                packaging = 'jar'
                description = 'Library for gds metrics dropwizard operations.'
                url = 'https://github.com/alphagov/gds_metrics_dropwizard'
                artifactId = 'gds-metrics-dropwizard'

                scm {
                    url = 'https://github.com/alphagov/gds_metrics_dropwizard'
                    connection = 'scm:git:git://github.com/alphagov/gds_metrics_dropwizard.git'
                    developerConnection = 'scm:git:ssh://git@github.com:alphagov/gds_metrics_dropwizard.git'
                }

                licenses {
                    license {
                        name = 'MIT Licence'
                        url = 'https://github.com/alphagov/gds_metrics_dropwizard/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        name = 'GDS Developers'
                    }
                }
            } // pom
        }
    }
}

// from https://mark.koli.ch/fail-build-on-java-compiler-warnings
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-serial" << "-Werror"
}
